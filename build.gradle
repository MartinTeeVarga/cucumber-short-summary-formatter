import org.apache.tools.ant.filters.ReplaceTokens

import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import java.time.format.FormatStyle

plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id 'net.researchgate.release' version '2.5.0'
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

repositories {
    jcenter()
}

dependencies {
    compile 'info.cukes:gherkin:2.12.2'
    compile 'info.cukes:gherkin-jvm-deps:1.0.3'
    testCompile 'junit:junit:4.11'
    testCompile 'info.cukes:cucumber-java8:1.2.5'
    testCompile 'info.cukes:cucumber-junit:1.2.5'
}

sourceSets {
    test {
        java.srcDir 'src/test/unit/java'
        resources.srcDir 'src/test/unit/resources'
    }
    cuke {
        java.srcDir 'src/test/cuke/java'
        resources.srcDir 'src/test/cuke/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    cukeCompile.extendsFrom testCompile
    cukeRuntime.extendsFrom testRuntime
}

processTestResources {
    outputs.upToDateWhen { false }
    String now = DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM).format(LocalDateTime.now());
    filter ReplaceTokens, tokens: [now: now]
}

task cuke(type: Test, description: 'Runs the mock cuke tests to produce report.', group: 'Verification') {
    testClassesDir = sourceSets.cuke.output.classesDir
    classpath = sourceSets.cuke.runtimeClasspath
}
test.dependsOn cuke

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

def pomConfig = {
    licenses {
        license {
            name "MIT"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "sm4"
            name "Martin Varga"
            email "sm4@kul.is"
        }
    }
}

publishing {
    publications {
        publication(MavenPublication) {
            group ''
            artifactId project.name
            version project.version

            from components.java
            artifact sourcesJar
        }
    }
}
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            groupId 'com.czequered.cucumber'
            artifactId "$project.name"
            version "$project.version"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Formats the output of cucumber tests.')
                root.appendNode('name', 'Cucumber short summary formatter')
                root.appendNode('url', 'https://github.com/sm4/cucumber-short-summary-formatter')
                root.children().last() + pomConfig
            }
        }
    }
}

// avoid setting up bintray in Travis CI
if (project.hasProperty('bintray_user')) {
    println "Running locally, configuring bintray."

    bintray {
        user = bintray_user     // saved in $GRADLE_HOME/gradle.properties
        key = bintray_api_key   // saved in $GRADLE_HOME/gradle.properties
        pkg {
            repo = 'maven'
            name = project.name
            licenses = ['MIT']
            vcsUrl = 'https://github.com/sm4/cucumber-short-summary-formatter.git'
        }
        publications = ['MyPublication']
    }
    afterReleaseBuild.dependsOn bintrayUpload
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}